/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: response.proto */

#ifndef PROTOBUF_C_response_2eproto__INCLUDED
#define PROTOBUF_C_response_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif

#include "enums.pb-c.h"

typedef struct _Response Response;
typedef struct _WelcomeMessage WelcomeMessage;
typedef struct _WorldStateMessage WorldStateMessage;
typedef struct _EventsMessage EventsMessage;
typedef struct _RefuseLoginMessage RefuseLoginMessage;
typedef struct _CharacterMessage CharacterMessage;
typedef struct _CreatureMessage CreatureMessage;
typedef struct _MoveMessage MoveMessage;
typedef struct _LogoutMessage LogoutMessage;


/* --- enums --- */

typedef enum _Response__Type {
  RESPONSE__TYPE__WELCOME_MESSAGE = 0,
  RESPONSE__TYPE__REFUSE_LOGIN = 1,
  RESPONSE__TYPE__WORLD_STATE = 2,
  RESPONSE__TYPE__EVENTS = 4
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(RESPONSE__TYPE)
} Response__Type;
typedef enum _RefuseLoginMessage__RefuseType {
  REFUSE_LOGIN_MESSAGE__REFUSE_TYPE__NICKNAME_TAKEN = 1,
  REFUSE_LOGIN_MESSAGE__REFUSE_TYPE__WRONG_CLASS = 2,
  REFUSE_LOGIN_MESSAGE__REFUSE_TYPE__UNKNOWN = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(REFUSE_LOGIN_MESSAGE__REFUSE_TYPE)
} RefuseLoginMessage__RefuseType;

/* --- messages --- */

struct  _Response
{
  ProtobufCMessage base;
  Response__Type type;
  WelcomeMessage *welcomemsg;
  RefuseLoginMessage *refuselogin;
  WorldStateMessage *worldstate;
  EventsMessage *events;
};
#define RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&response__descriptor) \
    , RESPONSE__TYPE__WELCOME_MESSAGE, NULL, NULL, NULL, NULL }


struct  _WelcomeMessage
{
  ProtobufCMessage base;
  int32_t id;
  int32_t key;
};
#define WELCOME_MESSAGE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&welcome_message__descriptor) \
    , 0, 0 }


struct  _WorldStateMessage
{
  ProtobufCMessage base;
  size_t n_charters;
  CharacterMessage **charters;
  size_t n_creatures;
  CreatureMessage **creatures;
};
#define WORLD_STATE_MESSAGE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&world_state_message__descriptor) \
    , 0,NULL, 0,NULL }


struct  _EventsMessage
{
  ProtobufCMessage base;
  size_t n_moves;
  MoveMessage **moves;
  size_t n_aimoves;
  MoveMessage **aimoves;
  size_t n_newcomers;
  CharacterMessage **newcomers;
  size_t n_logouts;
  LogoutMessage **logouts;
};
#define EVENTS_MESSAGE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&events_message__descriptor) \
    , 0,NULL, 0,NULL, 0,NULL, 0,NULL }


struct  _RefuseLoginMessage
{
  ProtobufCMessage base;
  RefuseLoginMessage__RefuseType type;
};
#define REFUSE_LOGIN_MESSAGE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&refuse_login_message__descriptor) \
    , REFUSE_LOGIN_MESSAGE__REFUSE_TYPE__NICKNAME_TAKEN }


struct  _CharacterMessage
{
  ProtobufCMessage base;
  int32_t id;
  char *nickname;
  CharacterClass class_;
  int32_t level;
  int32_t exp;
  int32_t pos_y;
  int32_t pos_x;
  int32_t hp;
  int32_t mp;
  int32_t ad;
};
#define CHARACTER_MESSAGE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&character_message__descriptor) \
    , 0, NULL, CHARACTER_CLASS__WARRIOR, 0, 0, 0, 0, 0, 0, 0 }


struct  _CreatureMessage
{
  ProtobufCMessage base;
  int32_t id;
  CreatureCategory category;
  int32_t level;
  int32_t pos_y;
  int32_t pos_x;
  int32_t hp;
  int32_t max_hp;
  int32_t ad;
};
#define CREATURE_MESSAGE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&creature_message__descriptor) \
    , 0, CREATURE_CATEGORY__NORMAL, 0, 0, 0, 0, 0, 0 }


struct  _MoveMessage
{
  ProtobufCMessage base;
  int32_t id;
  int32_t pos_y;
  int32_t pos_x;
};
#define MOVE_MESSAGE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&move_message__descriptor) \
    , 0, 0, 0 }


struct  _LogoutMessage
{
  ProtobufCMessage base;
  int32_t id;
};
#define LOGOUT_MESSAGE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&logout_message__descriptor) \
    , 0 }


/* Response methods */
void   response__init
                     (Response         *message);
size_t response__get_packed_size
                     (const Response   *message);
size_t response__pack
                     (const Response   *message,
                      uint8_t             *out);
size_t response__pack_to_buffer
                     (const Response   *message,
                      ProtobufCBuffer     *buffer);
Response *
       response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   response__free_unpacked
                     (Response *message,
                      ProtobufCAllocator *allocator);
/* WelcomeMessage methods */
void   welcome_message__init
                     (WelcomeMessage         *message);
size_t welcome_message__get_packed_size
                     (const WelcomeMessage   *message);
size_t welcome_message__pack
                     (const WelcomeMessage   *message,
                      uint8_t             *out);
size_t welcome_message__pack_to_buffer
                     (const WelcomeMessage   *message,
                      ProtobufCBuffer     *buffer);
WelcomeMessage *
       welcome_message__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   welcome_message__free_unpacked
                     (WelcomeMessage *message,
                      ProtobufCAllocator *allocator);
/* WorldStateMessage methods */
void   world_state_message__init
                     (WorldStateMessage         *message);
size_t world_state_message__get_packed_size
                     (const WorldStateMessage   *message);
size_t world_state_message__pack
                     (const WorldStateMessage   *message,
                      uint8_t             *out);
size_t world_state_message__pack_to_buffer
                     (const WorldStateMessage   *message,
                      ProtobufCBuffer     *buffer);
WorldStateMessage *
       world_state_message__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   world_state_message__free_unpacked
                     (WorldStateMessage *message,
                      ProtobufCAllocator *allocator);
/* EventsMessage methods */
void   events_message__init
                     (EventsMessage         *message);
size_t events_message__get_packed_size
                     (const EventsMessage   *message);
size_t events_message__pack
                     (const EventsMessage   *message,
                      uint8_t             *out);
size_t events_message__pack_to_buffer
                     (const EventsMessage   *message,
                      ProtobufCBuffer     *buffer);
EventsMessage *
       events_message__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   events_message__free_unpacked
                     (EventsMessage *message,
                      ProtobufCAllocator *allocator);
/* RefuseLoginMessage methods */
void   refuse_login_message__init
                     (RefuseLoginMessage         *message);
size_t refuse_login_message__get_packed_size
                     (const RefuseLoginMessage   *message);
size_t refuse_login_message__pack
                     (const RefuseLoginMessage   *message,
                      uint8_t             *out);
size_t refuse_login_message__pack_to_buffer
                     (const RefuseLoginMessage   *message,
                      ProtobufCBuffer     *buffer);
RefuseLoginMessage *
       refuse_login_message__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   refuse_login_message__free_unpacked
                     (RefuseLoginMessage *message,
                      ProtobufCAllocator *allocator);
/* CharacterMessage methods */
void   character_message__init
                     (CharacterMessage         *message);
size_t character_message__get_packed_size
                     (const CharacterMessage   *message);
size_t character_message__pack
                     (const CharacterMessage   *message,
                      uint8_t             *out);
size_t character_message__pack_to_buffer
                     (const CharacterMessage   *message,
                      ProtobufCBuffer     *buffer);
CharacterMessage *
       character_message__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   character_message__free_unpacked
                     (CharacterMessage *message,
                      ProtobufCAllocator *allocator);
/* CreatureMessage methods */
void   creature_message__init
                     (CreatureMessage         *message);
size_t creature_message__get_packed_size
                     (const CreatureMessage   *message);
size_t creature_message__pack
                     (const CreatureMessage   *message,
                      uint8_t             *out);
size_t creature_message__pack_to_buffer
                     (const CreatureMessage   *message,
                      ProtobufCBuffer     *buffer);
CreatureMessage *
       creature_message__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   creature_message__free_unpacked
                     (CreatureMessage *message,
                      ProtobufCAllocator *allocator);
/* MoveMessage methods */
void   move_message__init
                     (MoveMessage         *message);
size_t move_message__get_packed_size
                     (const MoveMessage   *message);
size_t move_message__pack
                     (const MoveMessage   *message,
                      uint8_t             *out);
size_t move_message__pack_to_buffer
                     (const MoveMessage   *message,
                      ProtobufCBuffer     *buffer);
MoveMessage *
       move_message__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   move_message__free_unpacked
                     (MoveMessage *message,
                      ProtobufCAllocator *allocator);
/* LogoutMessage methods */
void   logout_message__init
                     (LogoutMessage         *message);
size_t logout_message__get_packed_size
                     (const LogoutMessage   *message);
size_t logout_message__pack
                     (const LogoutMessage   *message,
                      uint8_t             *out);
size_t logout_message__pack_to_buffer
                     (const LogoutMessage   *message,
                      ProtobufCBuffer     *buffer);
LogoutMessage *
       logout_message__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   logout_message__free_unpacked
                     (LogoutMessage *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Response_Closure)
                 (const Response *message,
                  void *closure_data);
typedef void (*WelcomeMessage_Closure)
                 (const WelcomeMessage *message,
                  void *closure_data);
typedef void (*WorldStateMessage_Closure)
                 (const WorldStateMessage *message,
                  void *closure_data);
typedef void (*EventsMessage_Closure)
                 (const EventsMessage *message,
                  void *closure_data);
typedef void (*RefuseLoginMessage_Closure)
                 (const RefuseLoginMessage *message,
                  void *closure_data);
typedef void (*CharacterMessage_Closure)
                 (const CharacterMessage *message,
                  void *closure_data);
typedef void (*CreatureMessage_Closure)
                 (const CreatureMessage *message,
                  void *closure_data);
typedef void (*MoveMessage_Closure)
                 (const MoveMessage *message,
                  void *closure_data);
typedef void (*LogoutMessage_Closure)
                 (const LogoutMessage *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor response__descriptor;
extern const ProtobufCEnumDescriptor    response__type__descriptor;
extern const ProtobufCMessageDescriptor welcome_message__descriptor;
extern const ProtobufCMessageDescriptor world_state_message__descriptor;
extern const ProtobufCMessageDescriptor events_message__descriptor;
extern const ProtobufCMessageDescriptor refuse_login_message__descriptor;
extern const ProtobufCEnumDescriptor    refuse_login_message__refuse_type__descriptor;
extern const ProtobufCMessageDescriptor character_message__descriptor;
extern const ProtobufCMessageDescriptor creature_message__descriptor;
extern const ProtobufCMessageDescriptor move_message__descriptor;
extern const ProtobufCMessageDescriptor logout_message__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_response_2eproto__INCLUDED */
